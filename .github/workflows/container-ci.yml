name: container-env

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-west-1
      ECR_REPOSITORY: todoapp
      EKS_CLUSTER: kubernetes-solution-eks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        run: |
          IMAGE="${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}"
          docker build -f simple-fluid-page/Dockerfile -t "$IMAGE" simple-fluid-page
          docker push "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform init & apply
        working-directory: container-env/terraform
        env:
          TF_VAR_key_name: ${{ secrets.TF_VAR_KEY_NAME }}
        run: |
          terraform init -input=false
          terraform apply -auto-approve -input=false

      - name: Configure kubectl for EKS
        run: |
          aws eks update-kubeconfig \
            --name ${{ env.EKS_CLUSTER }} \
            --region ${{ env.AWS_REGION }}

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.3

      - name: Deploy Todo App to EKS with Helm
        run: |
          helm upgrade --install todo-app ./k8s/helm/todo-app \
            --set image.repository=${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }} \
            --set image.tag=${{ github.sha }} \
            --namespace default \
            --create-namespace
